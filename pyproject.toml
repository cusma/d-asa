[tool.poetry]
package-mode = false
name = "d-asa"
version = "0.4.0"
description = "Debt Algorand Standard Application"
license = "AGPL-3.0"
authors = ["cusma <cosimo.bassi@gmail.com>"]
maintainers = ["cusma <cosimo.bassi@gmail.com>"]
readme = ["README.md", "docs/SUMMARY.md"]
documentation = "https://cusma.github.io/d-asa/"
repository = "https://github.com/cusma/d-asa"
keywords = [
  "algorand",
  "blockchain",
  "debt",
  "finance",
  "tokenization",
  "actus",
]

[tool.poetry.dependencies]
python = "^3.12"
algokit-utils = "^3.0.2"
python-dotenv = "^1.1.0"
algorand-python = "^2.8.0"
algorand-python-testing = "^0.4.1"

[tool.poetry.group.dev.dependencies]
algokit-client-generator = "^2.0.0"
black = { extras = ["d"], version = "^25.1.0" }
ruff = "^0.11.9"
mypy = "^1.15.0"
pytest = "^8.3.5"
pytest-cov = "^6.1.1"
pytest-sugar = "^1.0.0"
pip-audit = "^2.9.0"
pre-commit = "^4.2.0"
puyapy = "^4.8.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 120
lint.select = [
  "E",
  "F",
  "ANN",
  "UP",
  "N",
  "C4",
  "B",
  "A",
  "YTT",
  "W",
  "FBT",
  "Q",
  "RUF",
  "I",
]
lint.unfixable = ["B", "RUF"]

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true
suppress-none-returning = true

[tool.pytest.ini_options]
pythonpath = ["smart_contracts", "tests"]

[tool.mypy]
files = "smart_contracts/"
python_version = "3.12"
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_equality = true
extra_checks = true
disallow_any_unimported = true
disallow_any_expr = true
disallow_any_decorated = true
disallow_any_explicit = true
untyped_calls_exclude = ["algosdk"]

[[tool.mypy.overrides]]
module = "tests.*"
disallow_any_expr = false
